{"version":3,"file":"rete.esm.js","sources":["../src/engine/component.ts","../src/node.ts","../src/component.ts","../src/connection.ts","../src/control.ts","../src/core/emitter.ts","../src/io.ts","../src/input.ts","../src/core/validator.ts","../src/core/context.ts","../src/view/utils.ts","../src/view/drag.ts","../src/view/zoom.ts","../src/view/area.ts","../src/view/connection.ts","../src/view/control.ts","../src/view/socket.ts","../src/view/node.ts","../src/view/index.ts","../src/selected.ts","../src/core/events.ts","../src/events.ts","../src/editor.ts","../src/output.ts","../src/socket.ts","../src/engine/recursion.ts","../src/engine/state.ts","../src/engine/events.ts","../src/engine/index.ts","../src/index.ts"],"sourcesContent":["import { Engine } from './index';\nimport { NodeData, WorkerInputs, WorkerOutputs } from '../core/data';\n\nexport abstract class Component {\n\n    name: string;\n    data: unknown = {};\n    engine: Engine | null = null;\n\n    constructor(name: string) {\n        this.name = name;\n    }\n\n    abstract worker(node: NodeData, inputs: WorkerInputs, outputs: WorkerOutputs, ...args: unknown[]): void;\n}","import { Connection } from './connection';\nimport { Control } from './control';\nimport { Input } from './input';\nimport { Output } from './output';\nimport { InputsData, NodeData, OutputsData } from './core/data';\n\nexport class Node {\n\n    name: string;\n    id: number;\n    position: [number, number] = [0.0, 0.0];\n    inputs = new Map<string, Input>();\n    outputs = new Map<string, Output>();\n    controls = new Map<string, Control>();\n    data: { [key: string]: unknown } = {};\n    meta: { [key: string]: unknown } = {};\n    collapsed: boolean;\n    inputsCollapsed: boolean;\n    processedCollapsed: boolean;\n    outputsCollapsed: boolean;\n\n    static latestId = 0;\n\n    constructor(name: string) {\n        this.name = name;\n        this.collapsed = false;\n        this.inputsCollapsed = false;\n        this.processedCollapsed = true;\n        this.outputsCollapsed = false;\n        this.id = Node.incrementId();\n    }\n\n    _add<T extends any>(list: Map<string, T>, item: T, prop: string) {\n        if (list.has(item.key))\n            throw new Error(`Item with key '${item.key}' already been added to the node`);\n        if (item[prop] !== null)\n            throw new Error('Item has already been added to some node');\n\n        item[prop] = this;\n        list.set(item.key, item);\n    }\n\n    addControl(control: Control) {\n        this._add(this.controls, control, 'parent');\n        return this;\n    }\n\n    removeControl(control: Control) {\n        control.parent = null;\n\n        this.controls.delete(control.key);\n    }\n\n    addInput(input: Input) {\n        this._add(this.inputs, input, 'node');\n        return this;\n    }\n\n    removeInput(input: Input) {\n        input.removeConnections();\n        input.node = null;\n\n        this.inputs.delete(input.key);\n    }\n\n    addOutput(output: Output) {\n        this._add(this.outputs, output, 'node');\n        return this;\n    }\n\n    removeOutput(output: Output) {\n        output.removeConnections();\n        output.node = null;\n\n        this.outputs.delete(output.key);\n    }\n\n    setMeta(meta: { [key: string]: unknown }) {\n        this.meta = meta;\n        return this;\n    }\n\n    getConnections() {\n        const ios = [...this.inputs.values(), ...this.outputs.values()];\n        const connections = ios.reduce((arr, io) => {\n            return [...arr, ...io.connections];\n        }, [] as Connection[]);\n\n        return connections;\n    }\n\n    update() {\n    }\n\n    static incrementId() {\n        if (!this.latestId)\n            this.latestId = 1\n        else\n            this.latestId++\n        return this.latestId\n    }\n\n    static resetId() {\n        this.latestId = 0;\n    }\n\n    toJSON(): NodeData {\n        const reduceIO = <T extends any>(list: Map<string, Input | Output>) => {\n            return Array.from(list).reduce<T>((obj, [key, io]) => {\n                obj[key] = io.toJSON();\n                return obj;\n            }, {} as any)\n        }\n\n        return {\n            'id': this.id,\n            'data': this.data,\n            'inputs': reduceIO<InputsData>(this.inputs),\n            'outputs': reduceIO<OutputsData>(this.outputs),\n            'position': this.position,\n            'name': this.name,\n            'collapsed': this.collapsed,\n            'inputsCollapsed': this.inputsCollapsed,\n            'processedCollapsed': this.processedCollapsed,\n            'outputsCollapsed': this.outputsCollapsed\n        }\n    }\n\n    static fromJSON(json: NodeData) {\n        const node = new Node(json.name);\n        const [x, y] = json.position;\n\n        node.id = json.id;\n        node.data = json.data;\n        node.position = [x, y];\n        node.name = json.name;\n        Node.latestId = Math.max(node.id, Node.latestId);\n        node.collapsed = json.collapsed;\n        node.inputsCollapsed = json.inputsCollapsed;\n        node.processedCollapsed = json.processedCollapsed;\n        node.outputsCollapsed = json.outputsCollapsed;\n\n        return node;\n    }\n}\n","import { Component as ComponentWorker } from './engine/component';\nimport { Node } from './node';\nimport { NodeEditor } from './editor';\n\nexport abstract class Component extends ComponentWorker {\n\n    editor: NodeEditor | null = null;\n    data: unknown = {};\n\n    constructor(name: string) {\n        super(name);\n    }\n\n    abstract async builder(node: Node): Promise<void>;\n\n    async build(node: Node) {\n        await this.builder(node);\n\n        return node;\n    }\n\n    async createNode(data = {}) {\n        const node = new Node(this.name);\n        \n        node.data = data;\n        await this.build(node);\n\n        return node;\n    }\n}","import { Input } from './input';\nimport { Output } from './output';\n\nexport class Connection {\n\n    output: Output;\n    input: Input;\n    data: unknown = {};\n\n    constructor(output: Output, input: Input) {\n        this.output = output;\n        this.input = input;\n        this.data = {};\n\n        this.input.addConnection(this);\n    }\n\n    remove() {\n        this.input.removeConnection(this);\n        this.output.removeConnection(this);\n    }\n}","import { Input } from './input';\nimport { Node } from './node';\n\nexport class Control {\n\n    key: string;\n    data: unknown = {};\n    parent: Node | Input | null = null;\n\n    constructor(key: string) {\n        if (this.constructor === Control)\n            throw new TypeError('Can not construct abstract class');\n        if (!key)\n            throw new Error('The key parameter is missing in super() of Control ');\n\n        this.key = key;\n    }\n\n    getNode() {\n        if (this.parent === null)\n            throw new Error('Control isn\\'t added to Node/Input');   \n        \n        if (this.parent instanceof Node)\n            return this.parent;\n            \n        if (!this.parent.node)\n            throw new Error('Control hasn\\'t be added to Input or Node');\n\n        return this.parent.node;\n    }\n\n    getData(key: string) {\n        return this.getNode().data[key];\n    }\n\n    putData(key: string, data: unknown) {\n        this.getNode().data[key] = data;\n    }  \n}","import { Events } from './events';\n\nexport class Emitter<EventTypes> {\n\n    events: {[key: string]: Function[]} = {};\n    silent = false;\n\n    constructor(events: Events | Emitter<EventTypes>) {\n        this.events = events instanceof Emitter ? events.events : events.handlers;\n    }\n\n    on<K extends keyof EventTypes>(names: K | K[], handler: (args: EventTypes[K]) => void | unknown): this {\n        const events = names instanceof Array ? names : (names as string).split(' ');\n\n        (events as string[]).forEach(name => {\n            if (!this.events[name])\n                throw new Error(`The event ${name} does not exist`);\n            this.events[name].push(handler);\n        });\n\n        return this;\n    }\n\n    trigger<K extends keyof EventTypes>(name: K, params: EventTypes[K] | {} = {}) {\n        if (!(name in this.events))\n            throw new Error(`The event ${name} cannot be triggered`);\n\n        return this.events[name as string].reduce((r: boolean, e: Function) => {\n            return (e(params) !== false) && r\n        }, true); // return false if at least one event is false        \n    }\n\n    bind(name: string) {\n        if (this.events[name])\n            throw new Error(`The event ${name} is already bound`);\n\n        this.events[name] = [];\n    }\n\n    exist(name: string) {\n        return Array.isArray(this.events[name]);\n    }\n}","import { Connection } from './connection';\nimport { Node } from './node';\nimport { Socket } from './socket';\n\nexport class IO {\n\n    node: Node | null = null;\n    multipleConnections: boolean;\n    connections: Connection[] = [];\n   \n    key: string;\n    name: string;\n    socket: Socket;\n    data: any;\n\n    constructor(key: string, name: string, socket: Socket, multiConns: boolean) {\n\t    this.node = null;\n        this.multipleConnections = multiConns;\n        this.connections = [];\n\t   \n        this.key = key;\n        this.name = name;\n        this.socket = socket;\n    }\n    \n    removeConnection(connection: Connection) {\n        this.connections.splice(this.connections.indexOf(connection), 1);\n    }\n\n    removeConnections() {\n        this.connections.forEach(connection => this.removeConnection(connection));\n    }\n}","import { Connection } from './connection';\nimport { Control } from './control';\nimport { IO } from './io';\nimport { InputData } from './core/data';\nimport { Socket } from './socket';\n\nexport class Input extends IO {\n   \n    control: Control | null = null;\n\n    constructor(key: string, title: string, socket: Socket, multiConns: boolean = false) {\n        super(key, title, socket, multiConns);\n    }\n\n    hasConnection() {\n        return this.connections.length > 0;\n    }\n\n    addConnection(connection: Connection) {\n        if (!this.multipleConnections && this.hasConnection())\n            throw new Error('Multiple connections not allowed');\n        this.connections.push(connection);\n    }\n\n    addControl(control: Control) {\n        this.control = control;\n        control.parent = this;\n    }\n\n    showControl() {\n        return !this.hasConnection() && this.control !== null;\n    }\n\n    toJSON(): InputData {\n        return {\n            'connections': this.connections.map(c => {\n                if (!c.output.node) throw new Error('Node not added to Output');\n\n                return {\n                    node: c.output.node.id,\n                    output: c.output.key,\n                    data: c.data\n                };\n            })\n        };\n    }\n}","import { Data } from './data';\n\nexport class Validator {\n\n    static isValidData(data: Data) {\n        return typeof data.id === 'string' &&\n            this.isValidId(data.id) &&\n            data.nodes instanceof Object && !(data.nodes instanceof Array);\n    }\n\n    static isValidId(id: string) {\n        return /^[\\w-]{3,}@[0-9]+\\.[0-9]+\\.[0-9]+$/.test(id);\n    }\n\n    static validate(id: string, data: Data) {\n        const id1 = id.split('@');\n        const id2 = data.id.split('@');\n        let msg = [];\n\n        if (!this.isValidData(data))\n            msg.push('Data is not suitable'); \n        if (id !== data.id)\n            msg.push('IDs not equal');\n        if (id1[0] !== id2[0])\n            msg.push('Names don\\'t match');\n        if (id1[1] !== id2[1])\n            msg.push('Versions don\\'t match');\n\n        return { success: Boolean(!msg.length), msg: msg.join('. ') };\n    }\n}","import { Component } from '../engine/component';\nimport { Emitter } from './emitter'\nimport { Validator } from './validator'\nimport { EventsTypes as DefaultEvents, Events } from './events';\nimport { Plugin, PluginParams } from './plugin';\n\nexport class Context<EventsTypes> extends Emitter<EventsTypes & DefaultEvents> {\n\n    id: string;\n    plugins: Map<string, unknown>;\n    components: Map<string, Component>;\n\n    constructor(id: string, events: Events) {\n        super(events);\n\n        if (!Validator.isValidId(id))\n            throw new Error('ID should be valid to name@0.1.0 format');  \n        \n        this.id = id;\n        this.plugins = new Map();\n        this.components = new Map();\n    }\n\n    use<T extends Plugin, O extends PluginParams<T>>(plugin: T, options?: O) {\n        if (plugin.name && this.plugins.has(plugin.name)) throw new Error(`Plugin ${plugin.name} already in use`)\n\n        plugin.install(this, options || {});\n        this.plugins.set(plugin.name, options)\n    }\n\n    register(component: Component) {\n        if (this.components.has(component.name))\n            throw new Error(`Component ${component.name} already registered`);\n\n        this.components.set(component.name, component);\n        this.trigger('componentregister', component);\n    }\n\n    destroy() {\n        this.trigger('destroy');\n    }\n}","export function listenWindow<K extends keyof WindowEventMap>(event: K, handler: (e: WindowEventMap[K]) => void) {\n    window.addEventListener(event, handler);\n    \n    return () => {\n        window.removeEventListener<K>(event, handler);\n    }\n}","import { listenWindow } from './utils';\n\nexport class Drag {\n\n    pointerStart: [number, number] | null;\n    el: HTMLElement;\n    destroy: () => void;\n\n    constructor(\n        el: HTMLElement,\n        private onTranslate = (_x: number, _y: number, _e: PointerEvent) => {},\n        private onStart = (_e: PointerEvent) => {},\n        private onDrag = (_e: PointerEvent) => {}\n    ) {\n        this.pointerStart = null;\n        this.el = el;\n\n        this.el.style.touchAction = 'none';\n        this.el.addEventListener('pointerdown', this.down.bind(this));\n\n        const destroyMove = listenWindow('pointermove', this.move.bind(this));\n        const destroyUp = listenWindow('pointerup', this.up.bind(this));\n\n        this.destroy = () => { destroyMove(); destroyUp(); }\n    }\n\n    down(e: PointerEvent) {\n        if ((e.pointerType === 'mouse') && (e.button !== 0)) return;\n        e.stopPropagation();\n        this.pointerStart = [e.pageX, e.pageY]\n\n        this.onStart(e);\n    }\n\n    move(e: PointerEvent) {\n        if (!this.pointerStart) return;\n        e.preventDefault();\n\n        let [x, y] = [e.pageX, e.pageY]\n\n        let delta = [x - this.pointerStart[0], y - this.pointerStart[1]];\n\n        let zoom = this.el.getBoundingClientRect().width / this.el.offsetWidth;\n\n        this.onTranslate(delta[0] / zoom, delta[1] / zoom, e);\n    }\n\n    up(e: PointerEvent) {\n        if (!this.pointerStart) return;\n        \n        this.pointerStart = null;\n        this.onDrag(e);\n    }\n}","import { listenWindow } from './utils';\n\nexport class Zoom {\n\n    el: HTMLElement;\n    intensity: number;\n    onzoom: Function;\n    previous: { cx: number; cy: number; distance: number } | null = null;\n\n    pointers: PointerEvent[] = [];\n    destroy: () => void;\n\n    constructor(container: HTMLElement, el: HTMLElement, intensity: number, onzoom: Function) {\n        this.el = el;\n        this.intensity = intensity;\n        this.onzoom = onzoom;\n\n        container.addEventListener('wheel', this.wheel.bind(this));\n        container.addEventListener('pointerdown', this.down.bind(this));\n        container.addEventListener('dblclick', this.dblclick.bind(this));\n\n        const destroyMove = listenWindow('pointermove', this.move.bind(this));\n        const destroyUp = listenWindow('pointerup', this.end.bind(this));\n        const destroyCancel = listenWindow('pointercancel', this.end.bind(this));\n\n        this.destroy = () => { destroyMove(); destroyUp(); destroyCancel(); }\n    }\n\n    get translating() { // is translating while zoom (works on multitouch)\n        return this.pointers.length >= 2;\n    }\n\n    wheel(e: WheelEvent) {\n        e.preventDefault();\n\n        const rect = this.el.getBoundingClientRect();\n        const isNegative = e.deltaY < 0;\n        const delta = isNegative ? this.intensity : - this.intensity;\n        const ox = (rect.left - e.clientX) * delta;\n        const oy = (rect.top - e.clientY) * delta;\n\n        this.onzoom(delta, ox, oy, 'wheel');\n    }\n\n    touches() {\n        let e = { touches: this.pointers }\n        let [x1, y1] = [e.touches[0].clientX, e.touches[0].clientY];\n        let [x2, y2] = [e.touches[1].clientX, e.touches[1].clientY];\n\n        let distance = Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2));\n\n        return {\n            cx: (x1 + x2)/2,\n            cy: (y1 + y2)/2,\n            distance\n        };\n    }\n\n    down(e: PointerEvent) {\n        this.pointers.push(e);\n    }\n\n    move(e: PointerEvent) {\n        this.pointers = this.pointers.map(p => p.pointerId === e.pointerId ? e : p)\n        if (!this.translating) return;\n\n        let rect = this.el.getBoundingClientRect();\n\n        let { cx, cy, distance } = this.touches();\n\n        if (this.previous !== null) {\n            let delta = distance / this.previous.distance - 1;\n\n            const ox = (rect.left - cx) * delta;\n            const oy = (rect.top - cy) * delta;\n\n            this.onzoom(delta, ox - (this.previous.cx - cx), oy - (this.previous.cy - cy), 'touch');\n        }\n        this.previous = { cx, cy, distance };\n    }\n\n    end(e: PointerEvent) {\n        this.previous = null;\n        this.pointers = this.pointers.filter(p => p.pointerId !== e.pointerId)\n    }\n\n    dblclick(e: MouseEvent) {\n        e.preventDefault();\n\n        const rect = this.el.getBoundingClientRect();\n        const delta = 4 * this.intensity;\n\n        const ox = (rect.left - e.clientX) * delta;\n        const oy = (rect.top - e.clientY) * delta;\n\n        this.onzoom(delta, ox, oy, 'dblclick');\n    }\n}\n","import { Drag } from './drag';\nimport { Emitter } from '../core/emitter';\nimport { EventsTypes } from '../events';\nimport { Zoom } from './zoom';\n\nexport interface Transform { k: number; x: number; y: number }\nexport interface Mouse { x: number; y: number }\nexport type ZoomSource = 'wheel' | 'touch' | 'dblclick';\n\nexport class Area extends Emitter<EventsTypes> {\n\n    el: HTMLElement;\n    container: HTMLElement;\n    transform: Transform = { k: 1, x: 0, y: 0 };\n    mouse: Mouse = { x: 0, y: 0 }\n    \n    private _startPosition: Transform | null = null\n    private _zoom: Zoom;\n    private _drag: Drag;\n\n    constructor(container: HTMLElement, emitter: Emitter<EventsTypes>) {\n        super(emitter);\n        \n        const el = this.el = document.createElement('div');\n\n        this.container = container;\n        el.style.transformOrigin = '0 0';\n\n        this._zoom = new Zoom(container, el, 0.1, this.onZoom.bind(this));\n        this._drag = new Drag(container, this.onTranslate.bind(this), this.onStart.bind(this));\n\n        emitter.on('destroy', () => {\n            this._zoom.destroy();\n            this._drag.destroy();\n        });\n\n        this.container.addEventListener('pointermove', this.pointermove.bind(this));\n\n        this.update();\n    }\n\n    update() {\n        const t = this.transform;\n\n        this.el.style.transform = `translate(${t.x}px, ${t.y}px) scale(${t.k})`;\n    }\n\n    pointermove(e: PointerEvent) {\n        const { clientX, clientY } = e;\n        const rect = this.el.getBoundingClientRect();\n        const x = clientX - rect.left;\n        const y = clientY - rect.top;\n        const k = this.transform.k;\n        \n        this.mouse = { x: x / k, y: y / k };\n        this.trigger('mousemove', { ...this.mouse }); // TODO rename on `pointermove`\n    }\n\n    onStart() {\n        this._startPosition = { ...this.transform };\n    }\n\n    onTranslate(dx: number, dy: number) {\n        if (this._zoom.translating) return; // lock translation while zoom on multitouch\n        if (this._startPosition) this.translate(this._startPosition.x + dx, this._startPosition.y + dy);\n    }\n\n    onZoom(delta: number, ox: number, oy: number, source: ZoomSource) {\n        this.zoom(this.transform.k * (1 + delta), ox, oy, source);\n\n        this.update();\n    }\n\n    translate(x: number, y: number) {\n        const params = { transform: this.transform, x, y };\n\n        if (!this.trigger('translate', params)) return;\n\n        this.transform.x = params.x;\n        this.transform.y = params.y;\n\n        this.update();\n        this.trigger('translated');\n    }\n\n    zoom(zoom: number, ox = 0, oy = 0, source: ZoomSource) {\n        const k = this.transform.k;\n        const params = { transform: this.transform, zoom, source };\n\n        if (!this.trigger('zoom', params)) return;\n        \n        const d = (k - params.zoom) / ((k - zoom) || 1);\n\n        this.transform.k = params.zoom || 1;\n        this.transform.x += ox * d;\n        this.transform.y += oy * d;\n\n        this.update();\n        this.trigger('zoomed', { source });\n    }\n\n    appendChild(el: HTMLElement) {\n        this.el.appendChild(el)\n    }\n\n    removeChild(el: HTMLElement) {\n        this.el.removeChild(el)\n    }\n}","import { Connection } from '../connection';\nimport { Emitter } from '../core/emitter';\nimport { EventsTypes } from '../events';\nimport { NodeView } from './node';\n\nexport class ConnectionView extends Emitter<EventsTypes> {\n\n    connection: Connection;\n    inputNode: NodeView;\n    outputNode: NodeView;\n    el: HTMLElement;\n\n    constructor(connection: Connection, inputNode: NodeView, outputNode: NodeView, emitter: Emitter<EventsTypes>) {\n        super(emitter);\n        this.connection = connection;\n        this.inputNode = inputNode;\n        this.outputNode = outputNode;\n\n        this.el = document.createElement('div');\n        this.el.style.position = 'absolute';\n        this.el.style.zIndex = '-1';\n\n        this.trigger('renderconnection', {\n            el: this.el,\n            connection: this.connection,\n            points: this.getPoints()\n        });\n    }\n\n    getPoints() {\n        const { input, output } = this.connection\n\n        if (this.inputNode.hasSocket(input) && this.outputNode.hasSocket(output)) {\n            const [x1, y1] = this.outputNode.getSocketPosition(output);\n            const [x2, y2] = this.inputNode.getSocketPosition(input);\n\n            return [x1, y1, x2, y2];\n        }\n\n        return [0, 0, 0, 0]\n    }\n\n    update() {\n        this.trigger('updateconnection', {\n            el: this.el,\n            connection: this.connection,\n            points: this.getPoints()\n        });\n    }\n}\n","import { Control } from '../control';\nimport { Emitter } from '../core/emitter';\nimport { EventsTypes } from '../events';\n\nexport class ControlView extends Emitter<EventsTypes> {\n\n    constructor(el: HTMLElement, control: Control, emitter: Emitter<EventsTypes>) {\n        super(emitter);\n        this.trigger('rendercontrol', { el, control });\n    }\n}","import { Emitter } from '../core/emitter';\nimport { EventsTypes } from '../events';\nimport { IO } from '../io';\nimport { Node } from '../node';\n\nexport class SocketView extends Emitter<EventsTypes> {\n\n    el: HTMLElement;\n    type: string;\n    io: IO;\n    node: Node;\n\n    constructor(el: HTMLElement, type: string, io: IO, node: Node, emitter: Emitter<EventsTypes>) {\n        super(emitter);\n        this.el = el;\n        this.type = type;\n        this.io = io;\n        this.node = node;\n\n        this.trigger('rendersocket', { el, [type]: this.io, socket: io.socket });\n    }\n\n    getPosition({ position }: { position: number[] }): [number, number] {\n        const el = this.el;\n\n        if (this.node.collapsed) {\n            let isOutput = false;\n            const customHackedOffsetX = 50;\n\n            if (this.io.node) {\n                isOutput = 'output_type_id' in this.io.data\n            }\n            // @ts-ignore\n            // the middle of the node component\n            const posY = document.getElementById(this.node.name.toLowerCase() + '-' + this.node.id).offsetHeight / 2\n\n            if (isOutput) {\n                // @ts-ignore\n                const posXOutput = document.getElementById('details-' + this.node.id).offsetWidth - customHackedOffsetX\n\n                return [\n                    // @ts-ignore\n                    position[0] + posXOutput,\n                    position[1] + posY\n                ]\n            }\n\n            return [\n                position[0] + customHackedOffsetX,\n                // @ts-ignore\n                position[1] + posY\n            ]\n        }\n        if (this.node.inputsCollapsed) {\n            let isOutput = false;\n            const customHackedOffsetX = 50;\n            const customHackedOffsetY = -10;\n\n            if (this.io.node) {\n                isOutput = 'output_type_id' in this.io.data\n            }\n            if (!isOutput) {\n                // @ts-ignore\n                // the middle of the inputs\n                const posY = document.getElementById('node-inputs-' + this.node.id).offsetHeight + document.getElementById('node-summary-' + this.node.id).offsetHeight + customHackedOffsetY\n\n                return [\n                    position[0] + customHackedOffsetX,\n                    // @ts-ignore\n                    position[1] + posY\n                ]\n            }\n        }\n        if (this.node.outputsCollapsed) {\n            let isOutput = false;\n            const customHackedOffsetX = 47;\n            const customHackedOffsetY = 0;\n\n            if (this.io.node) {\n                isOutput = 'output_type_id' in this.io.data\n            }\n            if (isOutput) {\n                // @ts-ignore\n                // the middle of the outputs\n                const posY = document.getElementById('company-' + this.node.id).offsetHeight + customHackedOffsetY - document.getElementById('node-footer-' + this.node.id).offsetHeight -document.getElementById('node-outputs-' + this.node.id).offsetHeight/2\n                // @ts-ignore\n                const posXOutput = document.getElementById('details-' + this.node.id).offsetWidth - customHackedOffsetX\n\n                return [\n                    position[0] + posXOutput,\n                    // @ts-ignore\n                    position[1] + posY\n                ]\n            }\n        }\n        return [\n            position[0] + el.offsetLeft + el.offsetWidth / 2,\n            position[1] + el.offsetTop + el.offsetHeight / 2\n        ]\n    }\n}","import { Component } from '../engine/component';\nimport { Control } from '../control';\nimport { ControlView } from './control';\nimport { Drag } from './drag';\nimport { Emitter } from '../core/emitter';\nimport { EventsTypes } from '../events';\nimport { IO } from '../io';\nimport { Node } from '../node';\nimport { SocketView } from './socket';\n\nexport class NodeView extends Emitter<EventsTypes> {\n\n    node: Node;\n    component: Component;\n    sockets = new Map<IO, SocketView>();\n    controls = new Map<Control, ControlView>();\n\n    el: HTMLElement;\n    private _startPosition: number[] = [];\n    private _drag: Drag;\n\n    constructor(node: Node, component: Component, emitter: Emitter<EventsTypes>) {\n        super(emitter);\n\n        this.node = node;\n        this.component = component;\n        this.el = document.createElement('div');\n        this.el.style.position = 'absolute';\n\n        this.el.addEventListener('contextmenu', e => this.trigger('contextmenu', { e, node: this.node }));\n\n        this._drag = new Drag(this.el, this.onTranslate.bind(this), this.onSelect.bind(this), () => {\n            this.trigger('nodedraged', node);\n            this.trigger('nodedragged', node);\n        });\n\n        this.trigger('rendernode', {\n            el: this.el,\n            node,\n            component: component.data,\n            bindSocket: this.bindSocket.bind(this),\n            bindControl: this.bindControl.bind(this)\n        });\n\n        this.update();\n    }\n\n    clearSockets() {\n        const ios: IO[] = [ ...this.node.inputs.values(), ...this.node.outputs.values()];\n\n        this.sockets.forEach(s => {\n            if (!ios.includes(s.io)) this.sockets.delete(s.io);\n        });\n    }\n\n    bindSocket(el: HTMLElement, type: string, io: IO) {\n        this.clearSockets();\n        this.sockets.set(io, new SocketView(el, type, io, this.node, this));\n    }\n\n    bindControl(el: HTMLElement, control: Control) {\n        this.controls.set(control, new ControlView(el, control, this));\n    }\n\n    hasSocket(io: IO) {\n        return this.sockets.has(io)\n    }\n\n    getSocketPosition(io: IO) {\n        const socket = this.sockets.get(io);\n\n        if (!socket) throw new Error(`Socket not found for ${io.name} with key ${io.key}`);\n\n        return socket.getPosition(this.node);\n    }\n\n    onSelect(e: MouseEvent) {\n        const payload = { node: this.node, accumulate: e.ctrlKey, e };\n\n        this.onStart();\n        this.trigger('multiselectnode', payload);\n        this.trigger('selectnode', payload);\n    }\n\n    onStart() {\n        this._startPosition = [...this.node.position];\n    }\n\n    onTranslate(dx: number, dy: number) {\n        this.trigger('translatenode', { node: this.node, dx, dy });\n    }\n\n    onDrag(dx: number, dy: number) {\n        const x = this._startPosition[0] + dx;\n        const y = this._startPosition[1] + dy;\n\n        this.translate(x, y);\n    }\n\n    translate(x: number, y: number) {\n        const node = this.node;\n        const params = { node, x, y };\n\n        if (!this.trigger('nodetranslate', params)) return;\n\n        const [px, py] = node.position;\n        const prev: [number, number] = [px, py];\n\n        node.position[0] = params.x;\n        node.position[1] = params.y;\n\n        this.update();\n        this.trigger('nodetranslated', { node, prev });\n    }\n\n    update() {\n        const [x, y] = this.node.position;\n\n        this.el.style.transform = `translate(${x}px, ${y}px)`;\n    }\n\n    remove() {\n\n    }\n\n    destroy() {\n        this._drag.destroy();\n    }\n}\n","import { Area } from './area';\nimport { Component } from '../engine/component';\nimport { Connection } from '../connection';\nimport { ConnectionView } from './connection';\nimport { Emitter } from '../core/emitter';\nimport { EventsTypes } from '../events';\nimport { Node } from '../node';\nimport { NodeView } from './node';\nimport { listenWindow } from './utils';\n\nexport class EditorView extends Emitter<EventsTypes> {\n\n    container: HTMLElement;\n    components: Map<string, Component>;\n    nodes = new Map<Node, NodeView>();\n    connections = new Map<Connection, ConnectionView>();\n    area: Area;\n\n    // eslint-disable-next-line max-statements\n    constructor(container: HTMLElement, components: Map<string, Component>, emitter: Emitter<EventsTypes>) {\n        super(emitter);\n\n        this.container = container;\n        this.components = components;\n\n        this.container.style.overflow = 'hidden';\n\n        this.container.addEventListener('click', this.click.bind(this));\n        this.container.addEventListener('contextmenu', e => this.trigger('contextmenu', { e, view: this }));\n        emitter.on('destroy', listenWindow('resize', this.resize.bind(this)));\n        emitter.on('destroy', () => this.nodes.forEach(view => view.destroy()));\n\n        this.on('nodetranslated', this.updateConnections.bind(this));\n        this.on('rendersocket', ({ socket }) => {\n            const connections = Array.from(this.connections.entries())\n            const relatedConnections = connections.filter(([connection]) => {\n                const { input, output } = connection\n\n                return [input.socket, output.socket].includes(socket)\n            })\n\n            relatedConnections.forEach(([_, view]) => requestAnimationFrame(() => view.update()))\n        })\n\n        this.area = new Area(container, this);\n        this.container.appendChild(this.area.el);\n    }\n\n    addNode(node: Node) {\n        const component = this.components.get(node.name);\n\n        if (!component) throw new Error(`Component ${node.name} not found`);\n\n        const nodeView = new NodeView(node, component, this);\n\n        this.nodes.set(node, nodeView);\n        this.area.appendChild(nodeView.el);\n    }\n\n    removeNode(node: Node) {\n        const nodeView = this.nodes.get(node);\n\n        this.nodes.delete(node);\n        if (nodeView) {\n            this.area.removeChild(nodeView.el);\n            nodeView.destroy();\n        }\n    }\n\n    addConnection(connection: Connection) {\n        if (!connection.input.node || !connection.output.node)\n            throw new Error('Connection input or output not added to node');\n\n        const viewInput = this.nodes.get(connection.input.node);\n        const viewOutput = this.nodes.get(connection.output.node);\n\n        if (!viewInput || !viewOutput)\n            throw new Error('View node not found for input or output');\n\n        const connView = new ConnectionView(connection, viewInput, viewOutput, this);\n\n        this.connections.set(connection, connView);\n        this.area.appendChild(connView.el);\n    }\n\n    removeConnection(connection: Connection) {\n        const connView = this.connections.get(connection);\n\n        this.connections.delete(connection);\n        if (connView)\n            this.area.removeChild(connView.el);\n    }\n\n    updateConnections({ node }: { node: Node }) {\n        node.getConnections().forEach(conn => {\n            let connView = this.connections.get(conn);\n\n            if (!connView) throw new Error('Connection view not found');\n\n            connView.update();\n        });\n    }\n\n    resize() {\n        const { container } = this;\n\n        if (!container.parentElement)\n            throw new Error('Container doesn\\'t have parent element');\n\n        const width = container.parentElement.clientWidth;\n        const height = container.parentElement.clientHeight;\n\n        container.style.width = width + 'px';\n        container.style.height = height + 'px';\n    }\n\n    click(e: Event) {\n        const container = this.container;\n\n        if (container !== e.target) return;\n        if (!this.trigger('click', { e, container })) return;\n    }\n}\n","import { Node } from './node';\n\nexport class Selected {\n\n    list: Node[] = [];\n\n    add(item: Node, accumulate = false) {\n        if (!accumulate)\n            this.list = [item]; \n        else if (!this.contains(item))\n            this.list.push(item);   \n    }\n\n    clear() {\n        this.list = [];\n    }\n\n    remove(item: Node) {\n        this.list.splice(this.list.indexOf(item), 1);\n    }\n\n    contains(item: Node) {\n        return this.list.indexOf(item) !== -1;\n    }\n\n    each(callback: (n: Node, index: number) => void) {\n        this.list.forEach(callback);\n    }\n}","import { Component } from '../engine/component';\n\nexport class Events {\n\n    handlers: {};\n\n    constructor(handlers: {}) {\n        this.handlers = {\n            warn: [console.warn],\n            error: [console.error],\n            componentregister: [],\n            destroy: [],\n            ...handlers\n        }\n    }\n}\n\nexport interface EventsTypes {\n    warn: string | Error;\n    error: string | Error;\n    componentregister: Component;\n    destroy: void;\n}","import { Component } from './component';\nimport { Connection } from './connection';\nimport { Control } from './control';\nimport { Data } from './core/data';\nimport { EditorView } from './view';\nimport { Input } from './input';\nimport { Node } from './node';\nimport { Output } from './output';\nimport { Socket } from './socket';\nimport { EventsTypes as DefaultEventsTypes, Events } from './core/events';\nimport { Mouse, Transform, ZoomSource } from './view/area';\n\nexport class EditorEvents extends Events {\n\n    constructor() {\n        super({\n            nodecreate: [],\n            nodecreated: [],\n            noderemove: [],\n            noderemoved: [],\n            connectioncreate: [],\n            connectioncreated: [],\n            connectionremove: [],\n            connectionremoved: [],\n            translatenode: [],\n            nodetranslate: [],\n            nodetranslated: [],\n            nodedraged: [],\n            nodedragged: [],\n            selectnode: [],\n            multiselectnode: [],\n            nodeselect: [],\n            nodeselected: [],\n            rendernode: [],\n            rendersocket: [],\n            rendercontrol: [],\n            renderconnection: [],\n            updateconnection: [],\n            keydown: [],\n            keyup: [],\n            translate: [],\n            translated: [],\n            zoom: [],\n            zoomed: [],\n            click: [],\n            mousemove: [],\n            contextmenu: [],\n            import: [],\n            export: [],\n            process: [],\n            clear: []\n        });\n    }    \n}\n\nexport interface EventsTypes extends DefaultEventsTypes {\n    componentregister: Component;\n    nodecreate: Node;\n    nodecreated: Node;\n    noderemove: Node;\n    noderemoved: Node;\n    connectioncreate: { input: Input; output: Output };\n    connectioncreated: Connection;\n    connectionremove: Connection;\n    connectionremoved: Connection;\n    translatenode: { node: Node; dx: number; dy: number };\n    nodetranslate: { node: Node; x: number; y: number };\n    nodetranslated: { node: Node; prev: [number, number] };\n    nodedraged: Node;\n    nodedragged: Node;\n    selectnode: {\n        node: Node;\n        accumulate: boolean;\n    };\n    multiselectnode: {\n        node: Node;\n        accumulate: boolean;\n        e: MouseEvent;\n    };\n    nodeselect: Node;\n    nodeselected: Node;\n    rendernode: {\n        el: HTMLElement;\n        node: Node;\n        component: object;\n        bindSocket: Function;\n        bindControl: Function;\n    };\n    rendersocket: {\n        el: HTMLElement;\n        input?: Input;\n        output?: Output;\n        socket: Socket;\n    };\n    rendercontrol: {\n        el: HTMLElement;\n        control: Control;\n    };\n    renderconnection: {\n        el: HTMLElement;\n        connection: Connection;\n        points: number[];\n    };\n    updateconnection: {\n        el: HTMLElement;\n        connection: Connection;\n        points: number[];\n    };\n    keydown: KeyboardEvent;\n    keyup: KeyboardEvent;\n    translate: {\n        transform: Transform;\n        x: number;\n        y: number;\n    };\n    translated: void;\n    zoom: {\n        transform: Transform;\n        zoom: number;\n        source: ZoomSource;\n    };\n    zoomed: {\n        source: ZoomSource;\n    };\n    click: {\n        e: Event;\n        container: HTMLElement;\n    };\n    mousemove: Mouse;\n    contextmenu: {\n        e: MouseEvent;\n        view?: EditorView;\n        node?: Node;\n    };\n    import: Data;\n    export: Data;\n    process: void;\n    clear: void;\n}\n","import { Component } from './component';\nimport { Connection } from './connection';\nimport { Context } from './core/context';\nimport { Data } from './core/data';\nimport { EditorView } from './view/index';\nimport { Input } from './input';\nimport { Node } from './node';\nimport { Output } from './output';\nimport { Selected } from './selected';\nimport { Validator } from './core/validator';\nimport { listenWindow } from './view/utils';\nimport { EditorEvents, EventsTypes } from './events';\n\nexport class NodeEditor extends Context<EventsTypes> {\n\n    nodes: Node[] = [];\n    selected = new Selected();\n    view: EditorView;\n\n    constructor(id: string, container: HTMLElement) {\n        super(id, new EditorEvents());\n        \n        this.view = new EditorView(container, this.components, this);\n\n        this.on('destroy', listenWindow('keydown', e => this.trigger('keydown', e)));\n        this.on('destroy', listenWindow('keyup', e => this.trigger('keyup', e)));\n\n        this.on('selectnode', ({ node, accumulate }) => this.selectNode(node, accumulate));\n        this.on('nodeselected', () => this.selected.each(n => {\n            const nodeView = this.view.nodes.get(n);\n\n            nodeView && nodeView.onStart()\n        }));\n        this.on('translatenode', ({ dx, dy }) => this.selected.each(n => {\n            const nodeView = this.view.nodes.get(n);\n\n            nodeView && nodeView.onDrag(dx, dy)\n        }));\n    }\n\n    addNode(node: Node) {\n        if (!this.trigger('nodecreate', node)) return;\n\n        this.nodes.push(node);\n        this.view.addNode(node);\n        \n        this.trigger('nodecreated', node);\n    }\n\n    removeNode(node: Node) {\n        if (!this.trigger('noderemove', node)) return;\n\n        node.getConnections().forEach(c => this.removeConnection(c));\n\n        this.nodes.splice(this.nodes.indexOf(node), 1);\n        this.view.removeNode(node);\n\n        this.trigger('noderemoved', node);\n    }\n\n    connect(output: Output, input: Input, data: unknown = {}) {\n        if (!this.trigger('connectioncreate', { output, input })) return;\n\n        try {\n            const connection = output.connectTo(input);\n\n            connection.data = data;\n            this.view.addConnection(connection);\n\n            this.trigger('connectioncreated', connection);\n        } catch (e) {\n            this.trigger('warn', e)\n        }\n    }\n\n    removeConnection(connection: Connection) {\n        if (!this.trigger('connectionremove', connection)) return;\n            \n        this.view.removeConnection(connection);\n        connection.remove();\n\n        this.trigger('connectionremoved', connection);\n    }\n\n    selectNode(node: Node, accumulate: boolean = false) {\n        if (this.nodes.indexOf(node) === -1) \n            throw new Error('Node not exist in list');\n        \n        if (!this.trigger('nodeselect', node)) return;\n\n        this.selected.add(node, accumulate);\n        \n        this.trigger('nodeselected', node);\n    }\n\n    getComponent(name: string) {\n        const component = this.components.get(name);\n\n        if (!component)\n            throw `Component ${name} not found`;\n        \n        return component as Component;\n    }\n\n    register(component: Component) {\n        super.register(component)\n        component.editor = this;\n    }\n\n    clear() {\n        [...this.nodes].forEach(node => this.removeNode(node));\n        this.trigger('clear');\n    }\n\n    toJSON() {\n        const data: Data = { id: this.id, nodes: {} };\n        \n        this.nodes.forEach(node => data.nodes[node.id] = node.toJSON());\n        this.trigger('export', data);\n        return data;\n    }\n\n    beforeImport(json: Data) {\n        const checking = Validator.validate(this.id, json);\n        \n        if (!checking.success) {\n            this.trigger('warn', checking.msg);\n            return false;\n        }\n        \n        this.silent = true;\n        this.clear();\n        this.trigger('import', json);\n        return true;\n    }\n\n    afterImport() {\n        this.silent = false;\n        return true;\n    }\n\n    async fromJSON(json: Data) {\n        if (!this.beforeImport(json)) return false;\n        const nodes: {[key: string]: Node} = {};\n\n        try {\n            await Promise.all(Object.keys(json.nodes).map(async id => {\n                const node = json.nodes[id];\n                const component = this.getComponent(node.name);\n\n                nodes[id] = await component.build(Node.fromJSON(node));\n                this.addNode(nodes[id]);\n            }));\n        \n            Object.keys(json.nodes).forEach(id => {\n                const jsonNode = json.nodes[id];\n                const node = nodes[id];\n                \n                Object.keys(jsonNode.outputs).forEach(key => {\n                    const outputJson = jsonNode.outputs[key];\n\n                    outputJson.connections.forEach(jsonConnection => {\n                        const nodeId = jsonConnection.node;\n                        const data = jsonConnection.data;\n                        const targetOutput = node.outputs.get(key);\n                        const targetInput = nodes[nodeId].inputs.get(jsonConnection.input);\n\n                        if (!targetOutput || !targetInput) {\n                            return this.trigger('error', `IO not found for node ${node.id}`);\n                        }\n\n                        this.connect(targetOutput, targetInput, data);\n                    });\n                });\n\n            });\n        } catch (e) {\n            this.trigger('warn', e);\n            return !this.afterImport();\n        }\n\n        return this.afterImport();\n    }\n}\n","import { Connection } from './connection';\nimport { IO } from './io';\nimport { Input } from './input';\nimport { OutputData } from './core/data';\nimport { Socket } from './socket';\n\nexport class Output extends IO {\n  \n    constructor(key: string, title: string, socket: Socket, multiConns: boolean = true) {\n        super(key, title, socket, multiConns);\n    }\n    \n    hasConnection() {\n        return this.connections.length > 0;\n    }\n\n    connectTo(input: Input) {\n        if (!this.socket.compatibleWith(input.socket))\n            throw new Error('Sockets not compatible');\n        if (!input.multipleConnections && input.hasConnection())\n            throw new Error('Input already has one connection');\n        if (!this.multipleConnections && this.hasConnection())\n            throw new Error('Output already has one connection');\n\n        const connection = new Connection(this, input);\n\n        this.connections.push(connection);\n        return connection;\n    }\n\n    connectedTo(input: Input) {\n        return this.connections.some((item) => {\n            return item.input === input;\n        });\n    }\n\n    toJSON(): OutputData {\n        return {\n            'connections': this.connections.map(c => {\n                if (!c.input.node) throw new Error('Node not added to Input');\n\n                return {\n                    node: c.input.node.id,\n                    input: c.input.key,\n                    data: c.data\n                }\n            })\n        };\n    }\n}","export class Socket {\n\n    name: string;\n    data: unknown;\n    compatible: Socket[] = [];\n\n    constructor(name: string, data = {}) {\n        this.name = name;\n        this.data = data;\n        this.compatible = [];\n    }\n\n    combineWith(socket: Socket) {\n        this.compatible.push(socket);\n    }\n\n    compatibleWith(socket: Socket) {\n        return this === socket || this.compatible.includes(socket);\n    }\n}","import { InputConnectionData, NodeData, NodesData } from '../core/data';\n\nfunction intersect<T>(array1: T[], array2: T[]) {\n    return array1.filter(value => -1 !== array2.indexOf(value));\n}\n\nexport class Recursion {\n\n    nodes: NodesData;\n\n    constructor(nodes: NodesData) {\n        this.nodes = nodes;\n    }\n    \n    extractInputNodes(node: NodeData): NodeData[] {\n        return Object.keys(node.inputs).reduce((acc: NodeData[], key: string) => {\n            const { connections } = node.inputs[key];\n            const nodesData = (connections || []).reduce((b: NodeData[], c: InputConnectionData) => {\n                return [...b, this.nodes[c.node]];\n            }, []);\n\n            return [...acc, ...nodesData]\n        }, []);\n    }\n\n    findSelf(list: NodeData[], inputNodes: NodeData[]): NodeData | null {\n        const inters = intersect<NodeData>(list, inputNodes);\n\n        if (inters.length)\n            return inters[0];\n        \n        for (let node of inputNodes) {\n            let l = [node, ...list];\n            let inter = this.findSelf(l, this.extractInputNodes(node));\n\n            if (inter)\n                return inter;\n        }\n\n        return null;\n    }\n\n    detect(): NodeData | null {\n        const nodesArr = Object.keys(this.nodes).map(id => this.nodes[id]);\n\n        for (let node of nodesArr) {\n            let inters = this.findSelf([node], this.extractInputNodes(node));\n\n            if (inters)\n                return inters;\n        }\n\n        return null;\n    }\n}","export const State = { AVAILABLE: 0, PROCESSED: 1, ABORT: 2 }","import { Events } from '../core/events';\n\nexport class EngineEvents extends Events {\n\n    constructor() {\n        super({});\n    }    \n}\nexport interface EventsTypes {\n}","import { Component } from './component';\nimport { Context } from '../core/context';\nimport { Recursion } from './recursion';\nimport { State } from './state';\nimport { Validator } from '../core/validator';\nimport { Data, NodeData, WorkerOutputs } from '../core/data';\nimport { EngineEvents, EventsTypes } from './events';\nexport { Component, Recursion };\n\ninterface EngineNode extends NodeData {\n    busy: boolean;\n    unlockPool: (() => void)[];\n    outputData: WorkerOutputs;\n}\n\nexport class Engine extends Context<EventsTypes> {\n\n    args: unknown[] = [];\n    data: Data | null = null;\n    state = State.AVAILABLE;\n    forwarded = new Set();\n    onAbort = () => { };\n\n    constructor(id: string) {\n        super(id, new EngineEvents());\n    }\n\n    public clone() {\n        const engine = new Engine(this.id);\n\n        this.components.forEach(c => engine.register(c));\n\n        return engine;\n    }\n\n    async throwError (message: string, data: unknown = null) {\n        await this.abort();\n        this.trigger('error', { message, data });\n        this.processDone();\n\n        return 'error';\n    }\n\n    private processStart() {\n        if (this.state === State.AVAILABLE) {  \n            this.state = State.PROCESSED;\n            return true;\n        }\n\n        if (this.state === State.ABORT) {\n            return false;\n        }\n\n        console.warn(`The process is busy and has not been restarted.\n                Use abort() to force it to complete`);\n        return false;\n    }\n\n    private processDone() {\n        const success = this.state !== State.ABORT;\n\n        this.state = State.AVAILABLE;\n        \n        if (!success) {\n            this.onAbort();\n            this.onAbort = () => { }\n        }    \n\n        return success;\n    }\n\n    public async abort() {\n        return new Promise(ret => {\n            if (this.state === State.PROCESSED) {\n                this.state = State.ABORT;\n                this.onAbort = ret;\n            }\n            else if (this.state === State.ABORT) {\n                this.onAbort();\n                this.onAbort = ret;\n            }\n            else\n                ret();\n        });\n    }\n\n    private async lock(node: EngineNode) {\n        return new Promise(res => {\n            node.unlockPool = node.unlockPool || [];\n            if (node.busy && !node.outputData)\n                node.unlockPool.push(res);\n            else \n                res();\n            \n            node.busy = true;\n        });    \n    }\n\n    unlock(node: EngineNode) {\n        node.unlockPool.forEach(a => a());\n        node.unlockPool = [];\n        node.busy = false;\n    }\n\n    private async extractInputData(node: NodeData) {\n        const obj: {[id: string]: any} = {};\n\n        for (let key of Object.keys(node.inputs)) {\n            const input = node.inputs[key];\n            const conns = input.connections;\n            const connData = await Promise.all(conns.map(async (c) => {\n                const prevNode = (this.data as Data).nodes[c.node];\n\n                const outputs = await this.processNode(prevNode as EngineNode);\n\n                if (!outputs) \n                    this.abort();\n                else\n                    return outputs[c.output];\n            }));\n\n            obj[key] = connData;\n        }\n\n        return obj;\n    }\n\n    private async processWorker(node: NodeData) {\n        const inputData = await this.extractInputData(node);\n        const component = this.components.get(node.name) as Component;\n        const outputData = {};\n\n        try {\n            await component.worker(node, inputData, outputData, ...this.args);\n        } catch (e) {\n            this.abort();\n            this.trigger('warn', e);\n        }\n\n        return outputData;\n    }\n\n    private async processNode(node: EngineNode) {\n        if (this.state === State.ABORT || !node)\n            return null;\n        \n        await this.lock(node);\n\n        if (!node.outputData) {\n            node.outputData = await this.processWorker(node);\n        }\n\n        this.unlock(node);\n        return node.outputData;\n    }\n\n    private async forwardProcess(node: NodeData) {\n        if (this.state === State.ABORT)\n            return null;\n        \n        return await Promise.all(Object.keys(node.outputs).map(async (key) => {\n            const output = node.outputs[key];\n            return await Promise.all(output.connections.map(async (c) => {\n                const nextNode = (this.data as Data).nodes[c.node];\n                if(!this.forwarded.has(nextNode)) {\n                    this.forwarded.add(nextNode);\n                    await this.processNode(nextNode as EngineNode);\n                    await this.forwardProcess(nextNode);\n                }\n            }));\n        }));\n    }\n\n    copy(data: Data) {\n        data = Object.assign({}, data);\n        data.nodes = Object.assign({}, data.nodes);\n        \n        Object.keys(data.nodes).forEach(key => {\n            data.nodes[key] = Object.assign({}, data.nodes[key])\n        });\n        return data;\n    }\n\n    async validate(data: Data) {\n        const checking = Validator.validate(this.id, data);\n        const recursion = new Recursion(data.nodes);\n\n        if (!checking.success)\n            return await this.throwError(checking.msg);  \n        \n        const recurrentNode = recursion.detect();\n\n        if (recurrentNode)\n            return await this.throwError('Recursion detected', recurrentNode);      \n         \n        return true;\n    }\n\n    private async processStartNode(id: string | number | null) {\n        if (!id) return;\n\n        let startNode = (this.data as Data).nodes[id];\n\n        if (!startNode)\n            return await this.throwError('Node with such id not found');   \n        \n        await this.processNode(startNode as EngineNode);\n        await this.forwardProcess(startNode);\n    }\n\n    private async processUnreachable() {\n        const data = this.data as Data;\n\n        for (let i in data.nodes) { // process nodes that have not been reached\n            const node = data.nodes[i] as EngineNode;\n\n            if (typeof node.outputData === 'undefined') {\n                await this.processNode(node);\n                await this.forwardProcess(node);\n            }\n        }\n    }\n\n    async process<T extends unknown[]>(data: Data, startId: number | string | null = null, ...args: T) {\n        if (!this.processStart()) return;\n        if (!this.validate(data)) return;    \n        \n        this.data = this.copy(data);\n        this.args = args;\n        this.forwarded = new Set();\n        \n        await this.processStartNode(startId);\n        await this.processUnreachable();\n        \n        return this.processDone()?'success':'aborted';\n    }\n}\n","import { Component } from './component';\nimport { Connection } from './connection';\nimport { Control } from './control';\nimport { Emitter } from './core/emitter';\nimport { IO } from './io';\nimport { Input } from './input';\nimport { Node } from './node';\nimport { NodeEditor } from './editor';\nimport { Output } from './output';\nimport { Socket } from './socket';\nimport { Engine, Recursion } from './engine/index';\n\nexport { Engine, Recursion } from './engine/index';\nexport { Component } from './component';\nexport { Control } from './control';\nexport { Connection } from './connection';\nexport { Emitter } from './core/emitter';\nexport { Input } from './input';\nexport { IO } from './io';\nexport { Node } from './node';\nexport { NodeEditor } from './editor';\nexport { Output } from './output';\nexport { Socket } from './socket';\n\nexport default {\n    Engine,\n    Recursion,\n    Component,\n    Control,\n    Connection,\n    Emitter,\n    Input,\n    IO,\n    Node,\n    NodeEditor,\n    Output,\n    Socket\n}"],"names":["Component","name","Node","Map","collapsed","inputsCollapsed","processedCollapsed","outputsCollapsed","id","incrementId","list","item","prop","has","key","Error","set","control","_add","controls","parent","input","inputs","removeConnections","node","output","outputs","meta","ios","values","connections","reduce","arr","io","reduceIO","Array","from","obj","toJSON","data","position","latestId","json","x","y","Math","max","builder","build","ComponentWorker","Connection","addConnection","removeConnection","Control","constructor","TypeError","getNode","Emitter","events","handlers","names","handler","split","forEach","push","params","r","e","isArray","IO","socket","multiConns","multipleConnections","connection","splice","indexOf","Input","title","length","hasConnection","map","c","Validator","isValidId","nodes","Object","test","id1","id2","msg","isValidData","success","Boolean","join","Context","plugins","components","plugin","options","install","component","trigger","listenWindow","event","window","addEventListener","removeEventListener","Drag","el","onTranslate","_x","_y","_e","onStart","onDrag","pointerStart","style","touchAction","down","bind","destroyMove","move","destroyUp","up","destroy","pointerType","button","stopPropagation","pageX","pageY","preventDefault","delta","zoom","getBoundingClientRect","width","offsetWidth","Zoom","container","intensity","onzoom","wheel","dblclick","end","destroyCancel","rect","isNegative","deltaY","ox","left","clientX","oy","top","clientY","touches","pointers","x1","y1","x2","y2","distance","sqrt","pow","cx","cy","p","pointerId","translating","previous","filter","Area","emitter","k","document","createElement","transformOrigin","_zoom","onZoom","_drag","on","pointermove","update","t","transform","mouse","_startPosition","dx","dy","translate","source","d","appendChild","removeChild","ConnectionView","inputNode","outputNode","zIndex","points","getPoints","hasSocket","getSocketPosition","ControlView","SocketView","type","isOutput","customHackedOffsetX","posY","getElementById","toLowerCase","offsetHeight","posXOutput","customHackedOffsetY","offsetLeft","offsetTop","NodeView","onSelect","bindSocket","bindControl","sockets","s","includes","clearSockets","get","getPosition","payload","accumulate","ctrlKey","px","py","prev","EditorView","overflow","click","view","resize","updateConnections","entries","relatedConnections","_","requestAnimationFrame","area","nodeView","viewInput","viewOutput","connView","getConnections","conn","parentElement","clientWidth","height","clientHeight","target","Selected","contains","callback","Events","warn","console","error","componentregister","EditorEvents","nodecreate","nodecreated","noderemove","noderemoved","connectioncreate","connectioncreated","connectionremove","connectionremoved","translatenode","nodetranslate","nodetranslated","nodedraged","nodedragged","selectnode","multiselectnode","nodeselect","nodeselected","rendernode","rendersocket","rendercontrol","renderconnection","updateconnection","keydown","keyup","translated","zoomed","mousemove","contextmenu","process","clear","NodeEditor","selectNode","selected","each","n","addNode","removeNode","connectTo","remove","add","editor","checking","validate","silent","beforeImport","Promise","all","keys","getComponent","fromJSON","jsonNode","outputJson","jsonConnection","nodeId","targetOutput","targetInput","connect","afterImport","Output","compatibleWith","some","Socket","compatible","intersect","array1","array2","value","Recursion","acc","nodesData","b","inputNodes","inters","l","inter","findSelf","extractInputNodes","nodesArr","State","AVAILABLE","PROCESSED","ABORT","EngineEvents","Engine","Set","engine","register","message","abort","processDone","state","onAbort","ret","res","unlockPool","busy","outputData","a","conns","prevNode","processNode","connData","extractInputData","inputData","worker","args","lock","processWorker","unlock","nextNode","forwarded","forwardProcess","assign","recursion","throwError","recurrentNode","detect","startNode","i","startId","processStart","copy","processStartNode","processUnreachable"],"mappings":"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"}